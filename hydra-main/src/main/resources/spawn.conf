debug = ${?spawn.debug} # legacy system property

dataDir = etc
_stateFilePath = spawn.state
_stateFilePath = ${?spawn.state.file} # legacy system property
stateFile = ${com.addthis.hydra.job.spawn.Spawn.dataDir}/${com.addthis.hydra.job.spawn.Spawn._stateFilePath}
jobStore = ${com.addthis.hydra.job.spawn.Spawn.dataDir}/jobstore

queueType = rabbit

taskQueueDrainInterval = 500 ms
hostStatusRequestInterval =  5 seconds
queueKickInterval = 3 seconds
jobTaskUpdateHeartbeatInterval = 30 seconds

taskQueueDrainInterval = ${?task.queue.drain.interval} # legacy system property
hostStatusRequestInterval = ${?spawn.status.interval} # legacy system property
queueKickInterval = ${?spawn.queue.kick.interval} # legacy system property
jobTaskUpdateHeartbeatInterval = ${?spawn.jobtask.update.interval} # legacy system property

# thread pool for expanding jobs and sending kick messages (outside of the main application threads)
# - thread pool size of 10 chosen somewhat arbitrarily, most job expansions should be nearly instantaneous
# - max queue size of 5000 was chosen as a generous upper bound for how many tasks may be
#   queued at once (since the number of scheduled kicks is limited by queue size)
expandKickExecutor {
  thread-factory {nameFormat = "jobExpander-%d", daemon = true}
  core-threads = 10, max-threads = 10, keep-alive = 0, queue-size = 5000
  queue-gauge-class = com.addthis.hydra.job.spawn.Spawn, queue-gauge-name = expandKickExecutorQueue
}
scheduledExecutor {
  thread-factory {nameFormat = "spawnScheduledTask-%d", daemon = true}
  core-threads = 10
}

# structuredLogDir = "./log/spawn-stats"
structuredLogDir = ${?spawn.logger.bundle.dir}

queryHttpHost = localhost
queryHttpHost = ${?spawn.queryhost} # legacy system property
queryPort = 2222
queryPort = ${?com.addthis.hydra.query.web.QueryServer.webPort}
httpHost = localhost
httpHost = ${?spawn.localhost} # legacy system property
webPort = 5050
webPort = ${?spawn.http.port} # legacy system property
marathonEndpoint = ${?marathonEndpoint}
zkAppId = "zookeeper"
