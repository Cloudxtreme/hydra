_err_min = warn
_err_min = ${?logging.stderr}
_out_min = info
_out_min = ${?logging.stdout}
_status_min = error
_status_min = ${?logging.status}

name: hydra-oss-default, status: ${_status_min}, shutdownHook = disable
appenders: {
  appender: [
    { name: query-trace,
      type: RollingRandomAccessFile,
      fileName: "${sys:hydra.log:-log}/query-trace/last",
      filePattern: "${sys:hydra.log:-log}/query-trace/%d{yyyyMMdd-HHmmss}.gz",
      PatternLayout: { pattern: "%p [%t] %d{ISO8601} %F (line %L) %m%n" },
      Policies.Policies: [
        { type: SizeBasedTriggeringPolicy, size: 250 MB },
        { type: OnStartupTriggeringPolicy }
      ]
    },
    { name: File,
      type: RollingRandomAccessFile,
      fileName: "${sys:hydra.log:-log}/${sys:logfile.name}.log",
      filePattern: "${sys:hydra.log:-log}/old/${sys:logfile.name}-%d{yyMMddHHmmss}.log.gz",
      PatternLayout: { pattern: "%p [%t] %d{ISO8601} %F (line %L) %.-5000m%n" },
      OnStartupTriggeringPolicy: { minSize: 1 }
    },
    { name: Async,
      type: Async,
      AppenderRef: {
        ref: File
      },
      includeLocation: true
    }
  ]
},
loggers: {
  logger: [
    { name: query-trace, level: info, additivity: false,
      AppenderRef: { ref: query-trace }},
    { name: org.apache.activemq.spring, level: warn },
    { name: com.addthis.hydra.data.tree.concurrent.ConcurrentTreeDeletionTask.Background, level: warn },
    { name: org.springframework, level: warn },
    { name: org.apache.xbean.spring, level: warn }
  ],
  root: { level: ${_out_min}, AppenderRef: [
    { ref: File,   level: ${_err_min}},
    { ref: Async,  level: ${_out_min}}
  ]}
}